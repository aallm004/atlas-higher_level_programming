=================================
Test for module `3-say_my_name.py`
=================================

Usage
=====

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Abigail", "Aleman")
    My name is Abigail Aleman

::

    >>> say_my_name("Mark Freeman", "Andrew II")
    My name is Mark Freeman Andrew II

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::

    >>> say_my_name("Sadie")
    My name is Sadie

Invalid Names
=============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(10, Bernie")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Sir", ["Duke", "Mc", "Smokerson"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Bernie": 10, "Fifolet": 10}, 10.8)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name' 
